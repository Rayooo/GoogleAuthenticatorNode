worker_processes  1;

events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    sendfile        on;

    keepalive_timeout  65;

    # 这个将为打开文件指定缓存，默认是没有启用的，max 指定缓存数量，
    # 建议和打开文件数一致，inactive 是指经过多长时间文件没被请求后删除缓存。
    open_file_cache max=1000 inactive=20s;

    # open_file_cache 指令中的inactive 参数时间内文件的最少使用次数，
    # 如果超过这个数字，文件描述符一直是在缓存中打开的，如上例，如果有一个
    # 文件在inactive 时间内一次没被使用，它将被移除。
    open_file_cache_min_uses 2;

    # 这个是指多长时间检查一次缓存的有效信息
    open_file_cache_valid 30s;

    upstream myServer {

        server 127.0.0.1:3001;
        server 127.0.0.1:3002;
        # server 127.0.0.1:3003 backup;
    }

	server {
	   listen 80;
	   return 301 https://$host$request_uri;
	}

    # HTTPS server

    server {
        listen       443 ssl;
        server_name  localhost;

        ssl_certificate      /home/ubuntu/GoogleAuthenticatorNode/bin/server.crt;
        ssl_certificate_key  /home/ubuntu/GoogleAuthenticatorNode/bin/key.pem;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers  on;

        location = / {
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            root /home/ubuntu/GoogleAuthenticatorNode/public/index.html;
        }

        location ~ ^/(assets|images|js|stylesheets|userHomePageAssets)/{
            root /home/ubuntu/GoogleAuthenticatorNode/public;
        }

        location / {
            proxy_set_header        Host $host;
            proxy_set_header        X-Real-IP $remote_addr;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        X-Forwarded-Proto $scheme;
            proxy_pass         https://myServer;
        }


    }
    include servers/*;
}
